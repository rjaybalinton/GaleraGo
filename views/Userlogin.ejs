<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Login - GaleraGo</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
    <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet"/>
    <style>
        body {
            font-family: 'Roboto', sans-serif;
            background: url('./images/homepagebg.jpg') no-repeat center center/cover;
        }
        .mute-button {
            position: absolute;
            bottom: 15px;
            left: 15px;
            background: rgba(0, 0, 0, 0.5);
            color: white;
            border: none;
            padding: 8px 12px;
            border-radius: 50%;
            cursor: pointer;
        }
        .mute-button:hover {
            background: rgba(0, 0, 0, 0.8);
        }

        /* Suspension Modal Styles */
        .suspension-modal {
            backdrop-filter: blur(5px);
        }
        
        .suspension-modal-content {
            background: white;
            border-radius: 12px;
            box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
            max-width: 500px;
            width: 90%;
            max-height: 90vh;
            overflow-y: auto;
        }
        
        .suspension-header {
            background: linear-gradient(135deg, #dc2626 0%, #b91c1c 100%);
            color: white;
            padding: 20px 24px;
            border-radius: 12px 12px 0 0;
        }
        
        .suspension-body {
            padding: 24px;
        }
        
        .suspension-icon {
            font-size: 3rem;
            color: #dc2626;
            text-align: center;
            margin-bottom: 16px;
        }
        
        .suspension-details {
            background: #f9fafb;
            border-radius: 8px;
            padding: 16px;
            margin-top: 16px;
            border: 1px solid #e5e7eb;
        }
        
        .suspension-detail-item {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            padding: 8px 0;
            border-bottom: 1px solid #e5e7eb;
        }
        
        .suspension-detail-item:last-child {
            border-bottom: none;
        }
        
        .suspension-detail-label {
            font-weight: 600;
            color: #374151;
            min-width: 100px;
            flex-shrink: 0;
        }
        
        .suspension-detail-value {
            color: #6b7280;
            text-align: right;
            flex: 1;
            margin-left: 12px;
            word-break: break-word;
        }
        
        .contact-support {
            background: #fef3c7;
            border: 1px solid #f59e0b;
            border-radius: 6px;
            padding: 12px;
            margin-top: 16px;
        }
        
        .btn-suspension {
            padding: 8px 16px;
            border-radius: 6px;
            font-weight: 500;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 8px;
            transition: all 0.2s;
        }
        
        .btn-suspension-primary {
            background: #2563eb;
            color: white;
        }
        
        .btn-suspension-primary:hover {
            background: #1d4ed8;
            color: white;
        }
        
        .btn-suspension-secondary {
            background: #6b7280;
            color: white;
        }
        
        .btn-suspension-secondary:hover {
            background: #4b5563;
            color: white;
        }
    </style>
</head>
<body class="bg-gray-100 flex items-center justify-center min-h-screen">
    <div class="flex w-full max-w-4xl bg-white bg-opacity-90 rounded-lg shadow-lg overflow-hidden relative">
        <!-- Video Section -->
        <div class="w-1/2 relative">
           <video id="bg-video" autoplay loop muted class="absolute inset-0 w-full h-full object-cover">
    <source src="/videos/Puerto.mp4" type="video/mp4">
    Your browser does not support the video tag.
</video>
            <!-- Mute/Unmute Button -->
            <button id="mute-button" class="mute-button">
                <i class="fas fa-volume-mute"></i>
            </button>
        </div>
        
        <!-- Login Form Section -->
        <div class="w-1/2 p-6 flex flex-col justify-center">
            <h2 class="text-2xl font-bold text-center text-gray-700">Login</h2>
            <!-- Error Messages -->
            <% if (typeof error !== 'undefined' && error) { %>
                <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-4" role="alert">
                    <span class="block sm:inline"><%= error %></span>
                </div>
            <% } %>
            
            <!-- Success Messages -->
            <% if (typeof success !== 'undefined' && success) { %>
                <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-4" role="alert">
                    <span class="block sm:inline"><%= success %></span>
                </div>
            <% } %>
            
            <div class="flex justify-center mb-4">
                <img src="https://storage.googleapis.com/a1aa/image/zYXPAdLWzim2adnthuyYrD0YyYiLAxqujo-mmbl-VGA.jpg"
                     alt="GaleraGo GPS Nearby logo" class="w-24 h-24">
            </div>
            <h2 class="text-2xl font-bold text-center text-gray-700">GaleraGo GPS Nearby</h2>
            <p class="text-center text-gray-600">Login to your account</p>
            
            <form action="/login" method="POST" class="mt-4">
                <div class="mb-4">
                    <label class="block text-gray-700">Email Address</label>
                    <input type="email" name="email" required
                           class="w-full px-4 py-2 mt-2 border rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600"
                           placeholder="Enter your email"/>
                </div>
                <div class="mb-4 relative">
                    <label class="block text-gray-700">Password</label>
                    <input type="password" name="password" id="login-password" required
                           class="w-full px-4 py-2 mt-2 border rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600"
                           placeholder="Enter your password"/>
                    <i class="fas fa-eye absolute right-3 top-10 cursor-pointer" id="toggle-login-password"></i>
                </div>
                <div class="flex items-center justify-between">
                    <div>
                        <input type="checkbox" class="form-checkbox h-4 w-4 text-blue-600"/>
                        <label class="ml-2 text-gray-700">Remember me</label>
                    </div>
                    <a href="#" id="open-forgot-password" class="text-sm text-blue-600 hover:underline">Forgot password?</a>
                </div>
                <div class="mt-6">
                    <button type="submit"
                            class="w-full px-4 py-2 text-white bg-blue-600 rounded-lg hover:bg-blue-700 focus:outline-none">
                        Login
                    </button>
                </div>
            </form>
            <p class="mt-4 text-center text-gray-600">
                Don't have an account?
                <a href="/register1" class="text-blue-600 hover:underline">Sign up</a>
            </p>
            <p class="mt-4 text-center">
                <a href="/" class="text-blue-600 hover:underline">Return to Homepage</a>
            </p>
        </div>
    </div>

    <!-- Forgot Password Modal -->
    <div id="forgot-password-modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-50 hidden">
        <div class="bg-white p-6 rounded-lg shadow-lg w-96">
            <h2 class="text-xl font-bold mb-4">Forgot Password</h2>
            <!-- Step 1: Request Reset Code -->
            <div id="step-email">
                <p class="text-gray-600 mb-4">Enter your email to receive a reset code.</p>
                <input type="email" id="forgot-email" placeholder="Enter your email"
                       class="w-full px-4 py-2 border rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600">
                <button id="send-code-btn"
                        class="w-full mt-4 px-4 py-2 text-white bg-blue-600 rounded-lg hover:bg-blue-700 focus:outline-none">
                    Send Code
                </button>
            </div>
            <!-- Step 2: Enter Reset Code & New Password -->
            <div id="step-reset" class="hidden">
                <p class="text-gray-600 mb-2">Check your email and enter the code below:</p>
                <input type="text" id="reset-code" placeholder="Enter 6-digit code"
                       class="w-full px-4 py-2 mb-2 border rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600">
                <input type="password" id="new-password" placeholder="Enter new password"
                       class="w-full px-4 py-2 mb-2 border rounded-lg focus:outline-none focus:ring-1 focus:ring-blue-600">
                <button id="reset-password-btn"
                        class="w-full mt-2 px-4 py-2 text-white bg-green-600 rounded-lg hover:bg-green-700 focus:outline-none">
                    Reset Password
                </button>
            </div>
            <button id="close-modal"
                    class="w-full mt-4 px-4 py-2 text-gray-700 bg-gray-200 rounded-lg hover:bg-gray-300 focus:outline-none">
                Cancel
            </button>
        </div>
    </div>

    <!-- Success Message Modal -->
    <div id="success-modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75 hidden z-50">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 overflow-hidden">
            <!-- Success Header -->
            <div class="bg-gradient-to-r from-green-500 to-green-600 px-6 py-4">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-lg font-medium text-white">Email Sent Successfully!</h3>
                    </div>
                </div>
            </div>
            
            <!-- Success Body -->
            <div class="px-6 py-4">
                <div class="text-center">
                    <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4">
                        <svg class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z" />
                        </svg>
                    </div>
                    <h4 class="text-lg font-medium text-gray-900 mb-2">Password Reset Code Sent</h4>
                    <p class="text-sm text-gray-600 mb-4">
                        We've sent a 6-digit reset code to your email address. Please check your inbox and spam folder.
                    </p>
                    <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
                        <p class="text-xs text-blue-800">
                            <strong>Note:</strong> The reset code will expire in 15 minutes for security reasons.
                        </p>
                    </div>
                    <div id="debug-code-container" class="hidden bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-4">
                        <p class="text-xs text-yellow-800">
                            <strong>Debug Code:</strong> <span id="debug-code-text" class="font-mono font-bold"></span>
                        </p>
                    </div>
                </div>
            </div>
            
            <!-- Success Footer -->
            <div class="bg-gray-50 px-6 py-3 flex justify-end">
                <button id="success-ok-btn" 
                        class="bg-green-600 text-white px-4 py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-200">
                    Continue
                </button>
            </div>
        </div>
    </div>

    <!-- Error Message Modal -->
    <div id="error-modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75 hidden z-50">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 overflow-hidden">
            <!-- Error Header -->
            <div class="bg-gradient-to-r from-red-500 to-red-600 px-6 py-4">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-lg font-medium text-white">Email Sending Failed</h3>
                    </div>
                </div>
            </div>
            
            <!-- Error Body -->
            <div class="px-6 py-4">
                <div class="text-center">
                    <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4">
                        <svg class="h-6 w-6 text-red-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
                        </svg>
                    </div>
                    <h4 class="text-lg font-medium text-gray-900 mb-2">Unable to Send Email</h4>
                    <p id="error-message" class="text-sm text-gray-600 mb-4">
                        There was an error sending the reset code to your email address.
                    </p>
                    <div id="debug-code-error-container" class="hidden bg-yellow-50 border border-yellow-200 rounded-lg p-3 mb-4">
                        <p class="text-xs text-yellow-800">
                            <strong>For testing purposes, use this code:</strong> <span id="debug-code-error-text" class="font-mono font-bold"></span>
                        </p>
                    </div>
                </div>
            </div>
            
            <!-- Error Footer -->
            <div class="bg-gray-50 px-6 py-3 flex justify-end space-x-3">
                <button id="error-retry-btn" 
                        class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 transition duration-200">
                    Try Again
                </button>
                <button id="error-close-btn" 
                        class="bg-gray-600 text-white px-4 py-2 rounded-lg hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-gray-500 transition duration-200">
                    Close
                </button>
            </div>
        </div>
    </div>

    <!-- Password Reset Success Modal -->
    <div id="password-reset-success-modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75 hidden z-50">
        <div class="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 overflow-hidden">
            <!-- Success Header -->
            <div class="bg-gradient-to-r from-green-500 to-green-600 px-6 py-4">
                <div class="flex items-center">
                    <div class="flex-shrink-0">
                        <svg class="h-8 w-8 text-white" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
                        </svg>
                    </div>
                    <div class="ml-3">
                        <h3 class="text-lg font-medium text-white">Password Reset Successful!</h3>
                    </div>
                </div>
            </div>
            
            <!-- Success Body -->
            <div class="px-6 py-4">
                <div class="text-center">
                    <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-green-100 mb-4">
                        <svg class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z" />
                        </svg>
                    </div>
                    <h4 class="text-lg font-medium text-gray-900 mb-2">Password Updated Successfully</h4>
                    <p id="password-reset-message" class="text-sm text-gray-600 mb-4">
                        Your password has been reset successfully. You can now log in with your new password.
                    </p>
                    <div class="bg-blue-50 border border-blue-200 rounded-lg p-3 mb-4">
                        <p class="text-xs text-blue-800">
                            <strong>Next Step:</strong> Please log in with your new password to access your account.
                        </p>
                    </div>
                </div>
            </div>
            
            <!-- Success Footer -->
            <div class="bg-gray-50 px-6 py-3 flex justify-center">
                <button id="password-reset-ok-btn" 
                        class="bg-green-600 text-white px-6 py-2 rounded-lg hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-green-500 transition duration-200">
                    Go to Login
                </button>
            </div>
        </div>
    </div>

    <!-- Suspension Modal -->
    <div id="suspension-modal" class="fixed inset-0 flex items-center justify-center bg-gray-900 bg-opacity-75 suspension-modal hidden">
        <div class="suspension-modal-content">
            <div class="suspension-header">
                <div class="flex items-center justify-between">
                    <h3 class="text-xl font-bold flex items-center">
                        <i class="fas fa-ban mr-2"></i>
                        Account Suspended
                    </h3>
                    <button id="close-suspension-modal" class="text-white hover:text-gray-200">
                        <i class="fas fa-times text-xl"></i>
                    </button>
                </div>
            </div>
            
            <div class="suspension-body">
                <div class="suspension-icon">
                    <i class="fas fa-user-slash"></i>
                </div>
                
                <div class="text-center mb-4">
                    <h4 class="text-lg font-semibold text-red-600 mb-2">Your account has been suspended</h4>
                    <p class="text-gray-600">You cannot log in at this time due to account suspension.</p>
                </div>

                <div class="suspension-details" id="suspension-details">
                    <!-- Suspension details will be populated here -->
                </div>

                <div class="contact-support">
                    <div class="flex items-start">
                        <i class="fas fa-info-circle text-yellow-600 mr-2 mt-1"></i>
                        <div>
                            <p class="text-sm text-yellow-800 font-medium">Need help?</p>
                            <p class="text-sm text-yellow-700">Please contact our support team for assistance with your account suspension.</p>
                        </div>
                    </div>
                </div>

                <div class="flex gap-3 mt-6">
                    <button id="close-suspension-modal-btn" class="btn-suspension btn-suspension-secondary flex-1">
                        <i class="fas fa-times"></i>
                        Close
                    </button>
                    <a href="mailto:support@galeragogps.com" class="btn-suspension btn-suspension-primary flex-1 text-center">
                        <i class="fas fa-envelope"></i>
                        Contact Support
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script>
    document.addEventListener("DOMContentLoaded", function () {
        const forgotPasswordModal = document.getElementById('forgot-password-modal');
        const openForgotPassword = document.getElementById('open-forgot-password');
        const closeModal = document.getElementById('close-modal');

        // Ensure elements exist
        if (forgotPasswordModal && openForgotPassword && closeModal) {
            openForgotPassword.addEventListener('click', function (event) {
                event.preventDefault();
                forgotPasswordModal.classList.remove('hidden');
            });

            closeModal.addEventListener('click', function () {
                forgotPasswordModal.classList.add('hidden');
            });

            // Close modal when clicking outside of it
            forgotPasswordModal.addEventListener('click', function (event) {
                if (event.target === forgotPasswordModal) {
                    forgotPasswordModal.classList.add('hidden');
                }
            });

            // Close modal with Escape key
            document.addEventListener('keydown', function (event) {
                if (event.key === 'Escape') {
                    forgotPasswordModal.classList.add('hidden');
                }
            });
        }
        
        // Toggle password visibility
        const toggleLoginPassword = document.getElementById('toggle-login-password');
        const loginPassword = document.getElementById('login-password');
        toggleLoginPassword.addEventListener('click', function () {
            const type = loginPassword.getAttribute('type') === 'password' ? 'text' : 'password';
            loginPassword.setAttribute('type', type);
            this.classList.toggle('fa-eye-slash');
        });

        // Toggle mute/unmute
        const bgVideo = document.getElementById('bg-video');
        const muteButton = document.getElementById('mute-button');
        muteButton.addEventListener('click', function () {
            bgVideo.muted = !bgVideo.muted;
            this.innerHTML = bgVideo.muted ? '<i class="fas fa-volume-mute"></i>' : '<i class="fas fa-volume-up"></i>';
        });

        // Suspension Modal functionality
        const suspensionModal = document.getElementById('suspension-modal');
        const closeSuspensionModal = document.getElementById('close-suspension-modal');
        const closeSuspensionModalBtn = document.getElementById('close-suspension-modal-btn');

        // Close suspension modal
        function closeSuspensionModalFunc() {
            suspensionModal.classList.add('hidden');
        }

        if (closeSuspensionModal) {
            closeSuspensionModal.addEventListener('click', closeSuspensionModalFunc);
        }
        
        if (closeSuspensionModalBtn) {
            closeSuspensionModalBtn.addEventListener('click', closeSuspensionModalFunc);
        }

        // Close suspension modal when clicking outside
        suspensionModal.addEventListener('click', function (event) {
            if (event.target === suspensionModal) {
                closeSuspensionModalFunc();
            }
        });

        // Check if suspension modal data exists and show modal
        <% if (typeof suspensionModal !== 'undefined' && suspensionModal) { %>
            const suspensionData = <%- JSON.stringify(suspensionModal) %>;
            
            // Populate suspension details
            const detailsContainer = document.getElementById('suspension-details');
            let detailsHTML = '';
            
            if (suspensionData.details && suspensionData.details.length > 0) {
                suspensionData.details.forEach(detail => {
                    detailsHTML += `
                        <div class="suspension-detail-item">
                            <div class="suspension-detail-label">${detail.label}:</div>
                            <div class="suspension-detail-value">${detail.value}</div>
                        </div>
                    `;
                });
            }
            
            detailsContainer.innerHTML = detailsHTML;
            
            // Show the modal
            suspensionModal.classList.remove('hidden');
            
            // Clear the session data after showing modal
            <% delete suspensionModal; %>
        <% } %>
    });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const modal = document.getElementById('forgot-password-modal');
            const openLink = document.getElementById('open-forgot-password');
            const closeBtn = document.getElementById('close-modal');
        
            const stepEmail = document.getElementById('step-email');
            const stepReset = document.getElementById('step-reset');
        
            const sendCodeBtn = document.getElementById('send-code-btn');
            const resetBtn = document.getElementById('reset-password-btn');
        
            const emailInput = document.getElementById('forgot-email');
            const codeInput = document.getElementById('reset-code');
            const newPasswordInput = document.getElementById('new-password');
        
            let savedEmail = ''; // to remember email across steps

            // Modal functions
            function showSuccessModal(data) {
                const successModal = document.getElementById('success-modal');
                const debugContainer = document.getElementById('debug-code-container');
                const debugText = document.getElementById('debug-code-text');
                
                // Show debug code if email wasn't sent but we have a debug code
                if (data.debug_code && !data.email_sent) {
                    debugContainer.classList.remove('hidden');
                    debugText.textContent = data.debug_code;
                } else {
                    debugContainer.classList.add('hidden');
                }
                
                successModal.classList.remove('hidden');
            }

            function showErrorModal(message) {
                const errorModal = document.getElementById('error-modal');
                const errorMessage = document.getElementById('error-message');
                const debugContainer = document.getElementById('debug-code-error-container');
                const debugText = document.getElementById('debug-code-error-text');
                
                errorMessage.textContent = message;
                
                // Show debug code if available
                if (message.includes('debug_code') || message.includes('testing purposes')) {
                    const codeMatch = message.match(/code: (\d{6})/);
                    if (codeMatch) {
                        debugContainer.classList.remove('hidden');
                        debugText.textContent = codeMatch[1];
                    }
                } else {
                    debugContainer.classList.add('hidden');
                }
                
                errorModal.classList.remove('hidden');
            }

            function hideSuccessModal() {
                document.getElementById('success-modal').classList.add('hidden');
            }

            function hideErrorModal() {
                document.getElementById('error-modal').classList.add('hidden');
            }

            function showPasswordResetSuccessModal(message) {
                const modal = document.getElementById('password-reset-success-modal');
                const messageElement = document.getElementById('password-reset-message');
                messageElement.textContent = message;
                modal.classList.remove('hidden');
            }

            function hidePasswordResetSuccessModal() {
                document.getElementById('password-reset-success-modal').classList.add('hidden');
            }
        
            // Open Modal
            openLink.addEventListener('click', function (e) {
                e.preventDefault();
                modal.classList.remove('hidden');
                stepEmail.classList.remove('hidden');
                stepReset.classList.add('hidden');
            });
        
            // Close Modal
            closeBtn.addEventListener('click', function () {
                modal.classList.add('hidden');
            });

            // Success Modal Event Listeners
            document.getElementById('success-ok-btn').addEventListener('click', function() {
                hideSuccessModal();
            });

            // Error Modal Event Listeners
            document.getElementById('error-retry-btn').addEventListener('click', function() {
                hideErrorModal();
                // Re-trigger the send code functionality
                sendCodeBtn.click();
            });

            document.getElementById('error-close-btn').addEventListener('click', function() {
                hideErrorModal();
            });

            // Close modals when clicking outside
            document.getElementById('success-modal').addEventListener('click', function(e) {
                if (e.target === this) {
                    hideSuccessModal();
                }
            });

            document.getElementById('error-modal').addEventListener('click', function(e) {
                if (e.target === this) {
                    hideErrorModal();
                }
            });

            // Password Reset Success Modal Event Listener
            document.getElementById('password-reset-ok-btn').addEventListener('click', function() {
                hidePasswordResetSuccessModal();
            });

            // Close password reset success modal when clicking outside
            document.getElementById('password-reset-success-modal').addEventListener('click', function(e) {
                if (e.target === this) {
                    hidePasswordResetSuccessModal();
                }
            });
        
            // Send Code
            sendCodeBtn.addEventListener('click', () => {
                const email = emailInput.value.trim();
                if (!email) {
                    alert("Please enter your email address");
                    return;
                }

                // Validate email format
                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(email)) {
                    alert("Please enter a valid email address");
                    return;
                }

                // Disable button to prevent multiple requests
                sendCodeBtn.disabled = true;
                sendCodeBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Sending...';
        
                fetch('/forgot-password', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email })
                })
                .then(res => {
                    if (!res.ok) {
                        throw new Error(`HTTP ${res.status}: ${res.statusText}`);
                    }
                    return res.json();
                })
                .then(data => {
                    if (data.success || data.message) {
                        // Show success modal
                        showSuccessModal(data);
                        savedEmail = email;
                        stepEmail.classList.add('hidden');
                        stepReset.classList.remove('hidden');
                    } else {
                        // Show error modal
                        showErrorModal(data.message || "Failed to send reset code. Please try again.");
                    }
                })
                .catch(err => {
                    console.error('Send code error:', err);
                    showErrorModal("Failed to send reset code. Please check your internet connection and try again.");
                })
                .finally(() => {
                    // Re-enable button
                    sendCodeBtn.disabled = false;
                    sendCodeBtn.innerHTML = 'Send Code';
                });
            });
        
            // Reset Password
            resetBtn.addEventListener('click', () => {
                const code = codeInput.value.trim();
                const newPassword = newPasswordInput.value.trim();
        
                if (!code || !newPassword) {
                    alert("Please fill in all fields");
                    return;
                }

                // Validate code format
                if (!/^\d{6}$/.test(code)) {
                    alert("Please enter a valid 6-digit code");
                    return;
                }

                // Validate password strength
                if (newPassword.length < 6) {
                    alert("Password must be at least 6 characters long");
                    return;
                }

                // Disable button to prevent multiple requests
                resetBtn.disabled = true;
                resetBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Verifying...';
        
                fetch('/verify-code', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify({ email: savedEmail, code })
                })
                .then(res => {
                    if (!res.ok) {
                        throw new Error(`HTTP ${res.status}: ${res.statusText}`);
                    }
                    return res.json();
                })
                .then(data => {
                    if (data.message === "Code verified successfully.") {
                        // Update button text
                        resetBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Resetting Password...';
                        
                        // Now send reset password request
                        return fetch('/reset-password', {
                            method: 'POST',
                            headers: { 'Content-Type': 'application/json' },
                            body: JSON.stringify({ email: savedEmail, newPassword })
                        });
                    } else {
                        throw new Error(data.message || "Code verification failed");
                    }
                })
                .then(res => {
                    if (!res.ok) {
                        throw new Error(`HTTP ${res.status}: ${res.statusText}`);
                    }
                    return res.json();
                })
                .then(data => {
                    // Show success modal for password reset
                    showPasswordResetSuccessModal(data.message || "Password reset successfully!");
                    modal.classList.add('hidden');
                    // Reset form
                    emailInput.value = '';
                    codeInput.value = '';
                    newPasswordInput.value = '';
                    stepEmail.classList.remove('hidden');
                    stepReset.classList.add('hidden');
                })
                .catch(err => {
                    console.error('Reset password error:', err);
                    showErrorModal(err.message || "Failed to reset password. Please try again.");
                })
                .finally(() => {
                    // Re-enable button
                    resetBtn.disabled = false;
                    resetBtn.innerHTML = 'Reset Password';
                });
            });
        });
    </script>

    <script>
        // Auto-hide notifications after 3 seconds
        document.addEventListener('DOMContentLoaded', function() {
            // Find all notification elements
            const notifications = document.querySelectorAll('[role="alert"]');
            
            if (notifications.length > 0) {
                // For each notification
                notifications.forEach(notification => {
                    // Set a timeout to hide it after 3 seconds
                    setTimeout(() => {
                        // Add fade-out transition
                        notification.style.transition = 'opacity 0.5s ease-out';
                        notification.style.opacity = '0';
                        
                        // After the fade-out animation completes, remove the element from the DOM
                        setTimeout(() => {
                            notification.style.display = 'none';
                        }, 500); // 500ms for the fade-out animation
                    }, 3000); // 3000ms (3 seconds) before starting the fade-out
                });
            }
        });
    </script>
</body>
</html>
